resultsNames(dds_LRT)
#res_wald <- results(dds_wald)
res_LRT <- results(dds_LRT)
res_LRT
plotMA(res_LRT)
#dds_wald <- DESeq(ddsHTSeq)
#resultsNames(dds_wald)
dds_LRT <- DESeq(ddsHTSeq, test="LRT", reduced=~ cycles + condition)
resultsNames(dds_LRT)
#res_wald <- results(dds_wald)
res_LRT <- results(dds_LRT)
res_LRT
plotMA(res_LRT)
#dds_wald <- DESeq(ddsHTSeq)
#resultsNames(dds_wald)
dds_LRT <- DESeq(ddsHTSeq, test="LRT", reduced=~ batch + condition)
resultsNames(dds_LRT)
#res_wald <- results(dds_wald)
res_LRT <- results(dds_LRT)
res_LRT
plotMA(res_LRT)
sampleBatch <- factor(sampleBatch)
sampleBatch <- rep(c("1","2","3","4"),times=3)
sampleBatch <- factor(sampleBatch)
sampleTable <- data.frame(sampleName=sampleName,
fileName=sampleFiles,
cycles=sampleCycles,
condition=sampleCondition,
type=sampleType,
batch=sampleBatch)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ cycles + condition + batch)
dds_LRT-cycles <- DESeq(ddsHTSeq, test="LRT", reduced=~ batch + condition)
dds_LRT-batch <- DESeq(ddsHTSeq, test="LRT", reduced=~ cycles + condition)
dds_LRT-condition <- DESeq(ddsHTSeq, test="LRT", reduced=~ cycles + batch)
res_LRT-cycles <- results(dds_LRT-cycles)
res_LRT-batch <- results(dds_LRT-batch)
res_LRT-condition <- results(dds_LRT-condition)
par(mfrow=c(3,1))
plotMA(res_LRT-cycles)
plotMA(res_LRT-batch)
plotMA(res_LRT-condition)
dds_LRT_cycles <- DESeq(ddsHTSeq, test="LRT", reduced=~ batch + condition)
dds_LRT_batch <- DESeq(ddsHTSeq, test="LRT", reduced=~ cycles + condition)
dds_LRT_condition <- DESeq(ddsHTSeq, test="LRT", reduced=~ cycles + batch)
res_LRT_cycles <- results(dds_LRT-cycles)
res_LRT_batch <- results(dds_LRT-batch)
res_LRT_condition <- results(dds_LRT-condition)
par(mfrow=c(3,1))
plotMA(res_LRT_cycles, main="-cycles")
plotMA(res_LRT_batch, main="-batch")
plotMA(res_LRT_condition, main="-condition")
res_LRT_cycles <- results(dds_LRT_cycles)
res_LRT_batch <- results(dds_LRT_batch)
res_LRT_condition <- results(dds_LRT_condition)
par(mfrow=c(3,1))
plotMA(res_LRT_cycles, main="-cycles")
plotMA(res_LRT_batch, main="-batch")
plotMA(res_LRT_condition, main="-condition")
shrink_cycles <- lfcShrink(dds_LRT_cycles, res=res_LRT_cycles, type="ashr")
shrink_batch <- lfcShrink(dds_LRT_batch, res=res_LRT_batch, type="ashr")
shrink_condition <- lfcShrink(dds_LRT_condition, res=res_LRT_condition, type="ashr")
par(mfrow=c(3,1))
plotMA(shrink_cycles, main="-cycles")
plotMA(shrink_batch, main="-batch")
plotMA(shrink_condition, main="-condition")
summary(shrink_cycles)
summary(shrink_batch)
summary(shrink_condition)
?ddshtseq
?ddsHTSeq
?DESeqDataSetFromHTSeqCount
directory <- "/Users/coonrod/Research/dupli/htseq-count"
sampleFiles <- grep("out.sam",list.files(directory),value=TRUE)
sampleFiles2 <- grep("dups_removed",list.files(directory),value=TRUE)
sampleFiles <- c(sampleFiles, sampleFiles2)
#sampleFiles
sampleCycles <-rep(c("12","18","24"),each=4)
sampleCycles <- c(sampleCycles,sampleCycles)
sampleCycles <- factor(sampleCycles)
sampleName <- sub("*_L005_Aligned.out.sam_counts.txt","\\1",sampleFiles)
sampleName <- sub("*_L005_Aligned.out.*.sam_counts.txt","\\1_dedup",sampleName)
sampleCondition <- rep(c("nondedup","dedup"),each=12)
sampleCondition <- factor(sampleCondition)
sampleType <- paste(sampleCycles,sampleCondition,sep="_")
sampleType <- factor(sampleType)
sampleTable <- data.frame(sampleName=sampleName,
fileName=sampleFiles,
cycles=sampleCycles,
condition=sampleCondition,
type=sampleType)
#set reference levels
sampleTable$condition = relevel(sampleTable$condition, ref = "nondedup")
sampleTable$cycles = relevel(sampleTable$cycles, ref = "12")
ddsHTSeq_type <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ type)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ cycles * condition)
dds <- DESeq(ddsHTSeq)
resultsNames(dds)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ cycles*condition)
dds <- DESeq(ddsHTSeq)
resultsNames(dds)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ type)
dds <- DESeq(ddsHTSeq)
resultsNames(dds)
sampleBatch <- rep(c("1","2","3","4"),times=3)
sampleBatch <- factor(sampleBatch)
sampleTable <- data.frame(sampleName=sampleName,
fileName=sampleFiles,
cycles=sampleCycles,
condition=sampleCondition,
type=sampleType,
batch=sampleBatch)
#set reference levels
sampleTable$condition = relevel(sampleTable$condition, ref = "nondedup")
sampleTable$cycles = relevel(sampleTable$cycles, ref = "12")
ddsHTSeq_type <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ type)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ condition + type + batch)
dds <- DESeq(ddsHTSeq)
resultsNames(dds)
directory <- "/Users/coonrod/Research/dupli/htseq-count"
sampleFiles <- grep("out.sam",list.files(directory),value=TRUE)
sampleFiles2 <- grep("dups_removed",list.files(directory),value=TRUE)
sampleFiles <- c(sampleFiles, sampleFiles2)
#sampleFiles
sampleCycles <-rep(c("12","18","24"),each=4)
sampleCycles <- c(sampleCycles,sampleCycles)
sampleCycles <- factor(sampleCycles)
sampleName <- sub("*_L005_Aligned.out.sam_counts.txt","\\1",sampleFiles)
sampleName <- sub("*_L005_Aligned.out.*.sam_counts.txt","\\1_dedup",sampleName)
sampleCondition <- rep(c("nondedup","dedup"),each=12)
sampleCondition <- factor(sampleCondition)
sampleType <- paste(sampleCycles,sampleCondition,sep="_")
sampleType <- factor(sampleType)
sampleBatch <- rep(c("1","2","3","4"),times=3)
sampleBatch <- factor(sampleBatch)
sampleTable <- data.frame(sampleName=sampleName,
fileName=sampleFiles,
cycles=sampleCycles,
condition=sampleCondition,
type=sampleType,
batch=sampleBatch)
View(sampleTable)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ condition + cycles + batch)
dds <- DESeq(ddsHTSeq)
resultsNames(dds)
rld <- rlog(dds, blind=FALSE)
rld <- rlog(dds, blind=FALSE)
library("ggplot2")
par(mfrow=c(1,1))
pcaData <- plotPCA(rld, intgroup=c("cycles","condition"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
?ggplot
?aes
library("ggplot2")
par(mfrow=c(1,1))
pcaData <- plotPCA(rld, intgroup=c("cycles","condition"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, fill=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
library("ggplot2")
par(mfrow=c(1,1))
pcaData <- plotPCA(rld, intgroup=c("cycles","condition","batch"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, fill=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
par(mfrow=c(1,1))
pcaData <- plotPCA(rld, intgroup=c("cycles","condition","batch"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, color=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
pcaData <- plotPCA(rld, intgroup=c("cycles","condition","batch"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
pcaData <- plotPCA(rld, intgroup=c("cycles","condition","batch"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, size=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, dot_size=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
pch=21
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed() +
pch=21
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, alpha=batch)), pch=21 +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
ggplot(pcaData, pch=21, aes(PC1, PC2, color=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, pch=21, aes(PC1, PC2, fill=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, fill=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
pcaData <- plotPCA(rld, intgroup=c("cycles","condition","batch"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
scale_shape_manual(values = c(21,22))
coord_fixed()
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, fill=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
scale_shape_manual(values = c(21,22))
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, fill=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
scale_shape_manual(values = c(21,22)) +
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, fill=batch, shape=condition, alpha=cycles)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
scale_shape_manual(values = c(21,22)) +
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, fill=condition, shape=cycles, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
scale_shape_manual(values = c(21,22)) +
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, fill=condition, shape=cycles, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
scale_shape_manual(values = c(21,22,23)) +
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, fill=cycles, shape=condition, alpha=batch)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
scale_shape_manual(values = c(21,22))
coord_fixed()
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
directory <- "/Users/coonrod/Research/dupli/htseq-count"
sampleFiles <- grep("out.sam",list.files(directory),value=TRUE)
sampleFiles2 <- grep("dups_removed",list.files(directory),value=TRUE)
sampleFiles <- c(sampleFiles, sampleFiles2)
#sampleFiles
sampleCycles <-rep(c("12","18","24"),each=4)
sampleCycles <- c(sampleCycles,sampleCycles)
sampleCycles <- factor(sampleCycles)
sampleName <- sub("*_L005_Aligned.out.sam_counts.txt","\\1",sampleFiles)
sampleName <- sub("*_L005_Aligned.out.*.sam_counts.txt","\\1_dedup",sampleName)
sampleCondition <- rep(c("nondedup","dedup"),each=12)
sampleCondition <- factor(sampleCondition)
sampleType <- paste(sampleCycles,sampleCondition,sep="_")
sampleType <- factor(sampleType)
sampleBatch <- rep(c("1","2","3","4"),times=3)
sampleBatch <- factor(sampleBatch)
sampleTable <- data.frame(sampleName=sampleName,
fileName=sampleFiles,
cycles=sampleCycles,
condition=sampleCondition,
type=sampleType,
batch=sampleBatch)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ condition + cycles + batch)
dds <- DESeq(ddsHTSeq)
resultsNames(dds)
rld <- rlog(dds, blind=FALSE)
library("ggplot2")
par(mfrow=c(1,1))
pcaData <- plotPCA(rld, intgroup=c("cycles","condition","batch"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
library(DESeq2)
directory <- "/Users/coonrod/Research/dupli/htseq-count"
sampleFiles <- grep("out.sam",list.files(directory),value=TRUE)
sampleFiles2 <- grep("dups_removed",list.files(directory),value=TRUE)
sampleFiles <- c(sampleFiles, sampleFiles2)
#sampleFiles
sampleCycles <-rep(c("12","18","24"),each=4)
sampleCycles <- c(sampleCycles,sampleCycles)
sampleCycles <- factor(sampleCycles)
sampleName <- sub("*_L005_Aligned.out.sam_counts.txt","\\1",sampleFiles)
sampleName <- sub("*_L005_Aligned.out.*.sam_counts.txt","\\1_dedup",sampleName)
sampleCondition <- rep(c("nondedup","dedup"),each=12)
sampleCondition <- factor(sampleCondition)
sampleType <- paste(sampleCycles,sampleCondition,sep="_")
sampleType <- factor(sampleType)
sampleBatch <- rep(c("1","2","3","4"),times=3)
sampleBatch <- factor(sampleBatch)
sampleTable <- data.frame(sampleName=sampleName,
fileName=sampleFiles,
cycles=sampleCycles,
condition=sampleCondition,
type=sampleType,
batch=sampleBatch)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=directory,
design= ~ condition + cycles + batch)
dds <- DESeq(ddsHTSeq)
resultsNames(dds)
rld <- rlog(dds, blind=FALSE)
library("ggplot2")
par(mfrow=c(1,1))
pcaData <- plotPCA(rld, intgroup=c("cycles","condition","batch"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=cycles, shape=condition)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BioCManager")
BiocManager::install("DESeq2")
BiocManager::install("ashr")
library(DESeq2)
setwd("~/Dropbox (University of Oregon)/Guest_teaching/2020_SLB_SCHOOL/SLB_SCHOOL_Data/data")
directory <- "/Users/coonrod/Dropbox\ (University\ of\ Oregon)/Guest_teaching/2020_SLB_SCHOOL/SLB_SCHOOL_Data/data/"
sampleFiles <- grep("mouse",list.files(directory),value=TRUE)
sampleFiles
sampleCondition1 <- sub("mouse","\\1",samplesFiles)
sampleCondition1 <- sub("mouse","\\1",sampleFiles)
sampleCondition1
sampleCondition <- factor(sub("\\d.*","\\1",sampleCondition1))
sampleCondition
sampleTable <- data.frame(sampleName=sub("*.\\w+_\\w+.genecount","\\1",sampleCondition1),
fileName=sampleFiles,
condition=sampleCondition)
View(sampleTable)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design = ~ condition)
dds <- DESeq(ddsHTSeq)
dds$condition <- relevel(dds$condition, ref = "Saline")
dds <- DESeq(dds)
dds <- dds[rowSums(counts(dds)) > 1, ]
resHept <- results(dds, contrast = c("condition", "Heptamined", "Saline"))
resHept <- results(dds, contrast = c("condition", "Heptamine", "Saline"))
resHept <- results(dds, contrast=c("condition","Heptamidine","Saline"))
resHeptOrdered <- resHept[order(resHept$padj),]
View(resHeptOrdered)
summary(resHept)
resHept_shrink <- lfcShrink(dds, contrast=c("condition","Heptamidine","Saline",res=resHept, type="ashr"))
resHept_shrink <- lfcShrink(dds, contrast=c("condition","Heptamidine","Saline"),res=resHept, type="ashr"))
resHept_shrink <- lfcShrink(dds, contrast=c("condition","Heptamidine","Saline"),res=resHept, type="ashr")
plotMA(resHept_shrink, alpha=0.1, ylim=c(-4,4), main="Hept vs Saline")
plotMA(resHept_shrink, alpha=0.1, ylim=c(-4,4), main="Hept vs Saline")
resHept <- results(dds, contrast=c("condition","Heptamidine","Saline"))
resFur <- results(dds, contrast=c("condition","Furamidine","Saline"))
resHeptOrdered <- resHept[order(resHept$padj),]
resFurOrdered <- resFur[order(resFur$padj),]
summary(resHeptOrdered)
summary(resFurOrdered)
resHept_shrink <- lfcShrink(dds, contrast=c("condition","heptamidine","saline"),res=resHept, type = "ashr")
resFur_shrink <- lfcShrink(dds, contrast=c("condition","furamidine","saline"),res=resFur, type = "ashr")
par(mfrow=c(1,2))
plotMA(resHept_shrink, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="Heptamidine vs Saline")
plotMA(resFur_shrink, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="Furamidine vs Saline")
resultsNames(dds)
par(mfrow=c(1,3))
H_norm <- lfcShrink(dds, coef=3, type = "normal")
H_apeglm<- lfcShrink(dds, coef=3, type = "apeglm")
H_ashr <- lfcShrink(dds, coef=3, type = "ashr")
plotMA(H_norm, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="normal")
plotMA(H_apeglm, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="apeglm")
plotMA(H_ashr, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="ashr")
rld <- rlog(dds, blind=FALSE)
plotPCA(rld, intgroup="condition")
plotPCA(rld, intgroup=c("condition")) + geom_text(aes(label=name))
library(ggplot)
library(ggplot2)
plotPCA(rld, intgroup=c("condition")) + geom_text(aes(label=name))
directory <- "/Users/coonrod/Dropbox\ (University\ of\ Oregon)/Guest_teaching/2020_SLB_SCHOOL/SLB_SCHOOL_Data/data/"
sampleFiles <- grep("mouse",list.files(directory),value=TRUE)
sampleCondition1 <- sub("mouse","\\1",sampleFiles)
sampleCondition <- factor(sub("\\d.*","\\1",sampleCondition1))
sampleTable <- data.frame(sampleName=sub("*.\\w+_\\w+.genecount","\\1",sampleCondition1),
fileName=sampleFiles,
condition=sampleCondition)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design = ~ condition)
dds <- DESeq(ddsHTSeq)
dds$condition <- relevel(dds$condition, ref = "Saline")
dds <- DESeq(dds)
dds <- dds[rowSums(counts(dds)) > 1, ]
resHept <- results(dds, contrast=c("condition","Heptamidine","Saline"))
resHeptOrdered <- resHept[order(resHept$padj),]
summary(resHept)
resHept_shrink <- lfcShrink(dds, contrast=c("condition","Heptamidine","Saline"),res=resHept, type="ashr")
plotMA(resHept_shrink, alpha=0.1, ylim=c(-4,4), main="Hept vs Saline")
par(mfrow=c(1,1))
resHept_shrink <- lfcShrink(dds, contrast=c("condition","Heptamidine","Saline"),res=resHept, type="ashr")
plotMA(resHept_shrink, alpha=0.1, ylim=c(-4,4), main="Hept vs Saline")
resultsNames(dds)
par(mfrow=c(1,3))
H_norm <- lfcShrink(dds, coef=3, type = "normal")
H_apeglm<- lfcShrink(dds, coef=3, type = "apeglm")
H_ashr <- lfcShrink(dds, coef=3, type = "ashr")
plotMA(H_norm, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="normal")
plotMA(H_apeglm, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="apeglm")
plotMA(H_ashr, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="ashr")
library("ggplot2")
par(mfrow=c(1,1))
plotPCA(rld, intgroup=c("condition"))
rld <- rlog(dds, blind=FALSE)
par(mfrow=c(1,1))
plotPCA(rld, intgroup=c("condition"))
esHept <- results(dds, contrast=c("condition","Heptamidine","Saline"))
resFur <- results(dds, contrast=c("condition","Furamidine","Saline"))
resHeptOrdered <- resHept[order(resHept$padj),]
resFurOrdered <- resFur[order(resFur$padj),]
summary(resHeptOrdered)
summary(resFurOrdered)
resHept_shrink <- lfcShrink(dds, contrast=c("condition","heptamidine","saline"),res=resHept, type = "ashr")
resFur_shrink <- lfcShrink(dds, contrast=c("condition","furamidine","saline"),res=resFur, type = "ashr")
par(mfrow=c(1,2))
plotMA(resHept_shrink, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="Heptamidine vs Saline")
plotMA(resFur_shrink, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="Furamidine vs Saline")
resHept <- results(dds, contrast=c("condition","Heptamidine","Saline"))
resFur <- results(dds, contrast=c("condition","Furamidine","Saline"))
resHeptOrdered <- resHept[order(resHept$padj),]
resFurOrdered <- resFur[order(resFur$padj),]
summary(resHeptOrdered)
summary(resFurOrdered)
resHept_shrink <- lfcShrink(dds, contrast=c("condition","heptamidine","saline"),res=resHept, type = "ashr")
resFur_shrink <- lfcShrink(dds, contrast=c("condition","furamidine","saline"),res=resFur, type = "ashr")
par(mfrow=c(1,1))
plotMA(resHept_shrink, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="Heptamidine vs Saline")
plotMA(resFur_shrink, alpha=0.1, ylim=c(-4.5,4.5), xlim=c(0.1,10000000), main="Furamidine vs Saline")
par(mfrow=c(1,1))
plotMA(resHept_shrink, alpha=0.1, ylim=c(-5,5), xlim=c(0.1,10000000), main="Heptamidine vs Saline")
idx <- identify(resHept_shrink$baseMean, resHept_shrink$log2FoldChange) #click on plot, esc to exit
rownames(resHept)[idx]
plotCounts(dds, gene = "ENSMUSG00000028834", intgroup = "condition")
plotCounts(dds, gene = which.min(resHept$padj), intgroup = "condition")
